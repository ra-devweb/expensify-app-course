// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Should render error for invalid form 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <p
      className="form__error"
    >
      Please provide description and amount.*
    </p>
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value=""
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;

exports[`Should render expense form correctly 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value=""
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;

exports[`Should render expense form correctly with expenses 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value=""
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;

exports[`Should set amount if valid input 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value="23.5"
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value=""
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;

exports[`Should set description on input change 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value="description"
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value=""
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;

exports[`Should set invalid amount input 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value=""
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;

exports[`Should set note on textArea change 1`] = `
<div>
  <div
    className="summary"
  >
    <h2
      className="text-center summary__title"
    >
      Add new expense
    </h2>
  </div>
  <div
    className="container"
  >
    <form
      className="form form--column"
      onSubmit={[Function]}
    >
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="description"
        >
          Description
        </label>
        <input
          autoFocus={true}
          className="form__input"
          id="description"
          onChange={[Function]}
          placeholder="Description"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="amount"
        >
          Amount
        </label>
        <input
          className="form__input"
          id="amount"
          onChange={[Function]}
          placeholder="Amount"
          type="text"
          value=""
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="date"
        >
          Pick date
        </label>
        <withStyles(SingleDatePicker)
          anchorDirection="left"
          appendToBody={false}
          block={[Function]}
          calendarInfoPosition="bottom"
          customCloseIcon={null}
          customInputIcon={null}
          date={"1970-01-01T00:00:00.000Z"}
          dayPickerNavigationInlineStyles={null}
          daySize={39}
          disableScroll={false}
          disabled={false}
          displayFormat={[Function]}
          enableOutsideDays={false}
          firstDayOfWeek={null}
          focused={false}
          hideKeyboardShortcutsPanel={false}
          horizontalMargin={0}
          horizontalMonthPadding={13}
          id="date"
          initialVisibleMonth={null}
          inputIconPosition="before"
          isDayBlocked={[Function]}
          isDayHighlighted={[Function]}
          isOutsideRange={[Function]}
          isRTL={false}
          keepFocusOnInput={false}
          keepOpenOnDateSelect={false}
          monthFormat="MMMM YYYY"
          navNext={null}
          navPosition="navPositionTop"
          navPrev={null}
          noBorder={false}
          numberOfMonths={1}
          onClose={[Function]}
          onDateChange={[Function]}
          onFocusChange={[Function]}
          onNextMonthClick={[Function]}
          onPrevMonthClick={[Function]}
          openDirection="down"
          orientation="horizontal"
          phrases={
            Object {
              "calendarLabel": "Calendar",
              "chooseAvailableDate": [Function],
              "clearDate": "Clear Date",
              "closeDatePicker": "Close",
              "dateIsSelected": [Function],
              "dateIsUnavailable": [Function],
              "enterKey": "Enter key",
              "escape": "Escape key",
              "hideKeyboardShortcutsPanel": "Close the shortcuts panel.",
              "homeEnd": "Home and end keys",
              "jumpToNextMonth": "Move forward to switch to the next month.",
              "jumpToPrevMonth": "Move backward to switch to the previous month.",
              "keyboardBackwardNavigationInstructions": "Navigate backward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardForwardNavigationInstructions": "Navigate forward to interact with the calendar and select a date. Press the question mark key to get the keyboard shortcuts for changing dates.",
              "keyboardShortcuts": "Keyboard Shortcuts",
              "leftArrowRightArrow": "Right and left arrow keys",
              "moveFocusByOneDay": "Move backward (left) and forward (right) by one day.",
              "moveFocusByOneMonth": "Switch months.",
              "moveFocusByOneWeek": "Move backward (up) and forward (down) by one week.",
              "moveFocustoStartAndEndOfWeek": "Go to the first or last day of a week.",
              "openThisPanel": "Open this panel.",
              "pageUpPageDown": "page up and page down keys",
              "questionMark": "Question mark",
              "returnFocusToInput": "Return to the date input field.",
              "roleDescription": "datepicker",
              "selectFocusedDate": "Select the date in focus.",
              "showKeyboardShortcutsPanel": "Open the keyboard shortcuts panel.",
              "upArrowDownArrow": "up and down arrow keys",
            }
          }
          placeholder="Date"
          readOnly={false}
          regular={false}
          renderCalendarInfo={null}
          renderDayContents={null}
          renderMonthElement={null}
          renderMonthText={null}
          renderNavNextButton={null}
          renderNavPrevButton={null}
          renderWeekHeaderElement={null}
          reopenPickerOnClearDate={false}
          required={false}
          screenReaderInputMessage=""
          showClearDate={false}
          showDefaultInputIcon={false}
          small={false}
          verticalHeight={null}
          verticalSpacing={22}
          weekDayFormat="dd"
          withFullScreenPortal={false}
          withPortal={false}
        />
      </div>
      <div
        className="form__group form__group--unset"
      >
        <label
          htmlFor="note"
        >
          Note (Optional)
        </label>
        <textarea
          className="form__area"
          id="note"
          onChange={[Function]}
          placeholder="Add a note for expense"
          value="New note"
        />
      </div>
      <br />
      <button
        className="btn btn--primary"
        style={
          Object {
            "marginBottom": "2rem",
            "marginTop": "2rem",
          }
        }
      >
        Add expense
      </button>
    </form>
  </div>
</div>
`;
